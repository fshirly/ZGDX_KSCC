package com.fable.kscc.bussiness.service.enrollMedT;

import com.fable.kscc.api.medTApi.AuthenticThread;
import com.fable.kscc.api.medTApi.MedTApi;
import com.fable.kscc.api.utils.XmlGenerator;
import com.fable.kscc.api.cache.DataCache;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 * Created by jiangmingjun on 2017/11/6.
 */
public class EnrollMedT {

    private static MedTApi medTApi = new MedTApi();
    private static final Logger logger = LoggerFactory.getLogger(EnrollMedT.class);
    /**
     *@author jiangmingjun
     *@date 2017/10/23
     *@description 鉴权线程
     */
    public static void threadStart(List<Map<String, String>> loginQueue,ExecutorService service){
        if(loginQueue.size()!=0){
            for (final Map<String, String> login:loginQueue){
                login.put("authenticationid", medTApi.getAuthenticationId(login));
                XmlGenerator.generateRequestRoot(login);
                medTApi.Login(login);
                medTApi.SetSysTimeInfo(login);
                try{
                    service.execute(new AuthenticThread(login,medTApi));
                }catch (Exception e) {
                    logger.error("鉴权线程出错："+e);
                    e.printStackTrace();
                }

            }
        }

    }
}
