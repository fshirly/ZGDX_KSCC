package com.fable.kscc.api.skyCloud;

import org.apache.commons.net.ftp.FTPClient;
import org.apache.commons.net.ftp.FTPClientConfig;
import org.apache.commons.net.ftp.FTPFile;
import org.apache.commons.net.ftp.FTPReply;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Date;

public class FtpUtil {


    public static void main(String[] args) {
        FileDownload();
    }

    public static void FileDownload() {
        //ftp服务器登录凭证
        String host = "202.127.28.81";//编解码器ip
        int port = 21;//编解码器端口
        String user = "admin";//ftp用户名
        String password = "admin123";//ftp密码
        String txtFileDir = "/tmp/disk/02_02/2017年10月12日/远程测试/";//文件存储位置
        String txtSaveDir = "E:/test/";//下载下来的本地目录

        //检查本地磁盘目录是否存在txt文件/gcc-4.5.1.tar.bz2
      /*  boolean flag = isTxtExit(today1,txtSaveDir);
        System.out.println(new Date()+"  判断txt文件是否存在："+flag);*/

        //讲txt的下载操作和解析操作分成2个独立的操作进行，排除互相间的干扰
        /*if(flag==false)//文件不存在进行ftp下载操作
        {*/
        FTPClient ftp = null;
        try {

            //ftp的数据下载
            ftp = new FTPClient();
            ftp.connect(host, port);
            ftp.login(user, password);
            ftp.setFileType(FTPClient.BINARY_FILE_TYPE);

            //设置linux环境
            FTPClientConfig conf = new FTPClientConfig(FTPClientConfig.SYST_UNIX);
            ftp.configure(conf);

            //判断是否连接成功
            int reply = ftp.getReplyCode();
            if (!FTPReply.isPositiveCompletion(reply)) {
                ftp.disconnect();
                System.out.println("FTP server refused connection.");
                return;
            }

            //设置访问被动模式
            ftp.setRemoteVerificationEnabled(false);
            ftp.enterLocalPassiveMode();

            //检索ftp目录下所有的文件，利用时间字符串进行过滤
            boolean dir = ftp.changeWorkingDirectory(new String(txtFileDir.getBytes("UTF-8"), "ISO8859-1"));
            if (dir) {
                FTPFile[] fs = ftp.listFiles();
                for (FTPFile f : fs) {
                    System.out.println(f.getName());
                    if (f.getName().contains("01040") || f.getName().contains("1test")) {
                        System.out.println(new Date() + "  ftpDownload定时器下载成功");
                        File localFile = new File(txtSaveDir + f.getName());
                        OutputStream ios = new FileOutputStream(localFile);
                        ftp.retrieveFile(f.getName(), ios);
                        ios.close();
//                              break;
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println(new Date() + "  ftp下载文件发生错误");
        } finally {
            if (ftp != null) try {
                ftp.disconnect();
            } catch (IOException ioe) {
                ioe.printStackTrace();
            }
        }
    }
}
