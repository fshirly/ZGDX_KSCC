package com.fable.kscc.bussiness.controller.fileupload;

import com.fable.kscc.api.exception.BusinessException;
import com.fable.kscc.api.utils.FileUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.ws.Response;
import java.io.*;
import java.net.URLEncoder;
import java.util.Map;

/**
 * Created by jk on 2017/8/9.
 * 文件上传表单提交
 * 根据文件名下载
 */
@Controller
@RequestMapping("/fileUpload")
public class FileUpload {

    private final Logger logger = LoggerFactory.getLogger(FileUpload.class);

    //test测试
    @RequestMapping(value = "/upload", method = RequestMethod.POST)
    public void fileUpload(@RequestParam(value = "fileUpload") MultipartFile fileUpload, HttpServletRequest request) {
        Map<String,Object> map = FileUtil.upload(fileUpload);
        System.out.println(map.get("fileName"));

    }

    /**
     * 文件下载
     *
     * @param fileUrl 下载文件路径名
     */
    @RequestMapping(value = "/download", method = RequestMethod.GET)
    public void fileDown(String fileUrl, String fileName, HttpServletResponse response) {

        if (StringUtils.isEmpty(fileUrl)) {
            throw new BusinessException("下载文件名不能为空");
        }

        //String name = fileUrl.substring(0, fileUrl.indexOf("."));
        String name = fileUrl;
      /*  if (name.length < 2) {
            throw new BusinessException("文件名不符合规范");
        }*/
        try {
            // String path = request.getSession().getServletContext().getRealPath("upload");
            String url = System.getProperty("user.dir");
            //System.out.println(System.getProperty("user.dir"));
            String path = url.substring(0, url.lastIndexOf(File.separator)) + File.separator + "user" + File.separator + "uploadFile";
            File file = new File(path, name);

            if (!file.exists()) {
                throw new BusinessException("上传文件丢失");
            }


            InputStream ins = new FileInputStream(file);
            BufferedInputStream bufferedInputStream = new BufferedInputStream(ins);
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
            OutputStream outputStream = response.getOutputStream();
            BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(outputStream);
            response.setContentType("application/x-download");
            response.setHeader(
                    "Content-disposition",//URLEncoder.encode(fileUrl.substring(fileUrl.indexOf("."), fileUrl.length()), "utf-8")
                    "attachment;filename=" + URLEncoder.encode(fileName, "ISO8859-1")
            );
            int bytesRead;
            byte[] buffer = new byte[1024];
            while ((bytesRead = bufferedInputStream.read(buffer, 0, 1024)) != -1) {
                bufferedOutputStream.write(buffer, 0, bytesRead);
            }
            bufferedOutputStream.flush();
            ins.close();
            bufferedInputStream.close();
            outputStream.close();
            bufferedOutputStream.close();
        } catch (Exception e) {
            logger.error("文件下载异常： {}", e);
        }

    }

    /**
     * s删除文件
     *
     * @param fileUrl 文件路径
     * @return 是否删除成功
     */
    @RequestMapping(value = "/deleteFile", method = RequestMethod.GET)
    public boolean deleteFile(String fileUrl) {
        if (StringUtils.isEmpty(fileUrl)) {
            throw new BusinessException("删除文件路径不能为空");
        }

        String name = fileUrl.substring(0, fileUrl.indexOf("."));
        String url = System.getProperty("user.dir");
        String path = url.substring(0, url.lastIndexOf(File.separator)) + File.separator + "user" + File.separator + "uploadFile";
        File file = new File(path, name);
        if (!file.exists()) {
            throw new BusinessException("删除文件不存在");
        }
        try {
            return file.delete();
        } catch (Exception e) {
            logger.error("删除文件异常：{}" , e);
        }
        return false;
    }


    public static void main(String[] args) {
        String property = System.getProperty("user.dir");
        System.out.println(property);
    }


}
